{"version":3,"sources":["component/Phonebook/Phonebook.module.css","App.module.css","component/Filter/Filter.module.css","component/Alert/Alert.module.css","redux/listAction.js","redux/listOperations.js","redux/contacts-selectors.js","component/Contacts/Contacts.js","component/Phonebook/Phonebook.js","component/Filter/Filter.js","component/Alert/Alert.js","App.js","reportWebVitals.js","redux/deleteListReduser.js","redux/store.js","index.js","component/Contacts/Contacts.module.css"],"names":["module","exports","fetchStart","createAction","fetchSuccess","fetchError","addStart","addSuccess","addError","deleteStart","deleteSuccess","deleteError","filterList","axios","defaults","baseURL","getContactsItems","state","contacts","items","getFilter","filter","getFilterContact","createSelector","filterToLowerCase","toLowerCase","name","includes","Contacts","this","props","fetchList","className","s","div","TransitionGroup","component","ul","map","e","CSSTransition","classNames","timeout","li","id","span","span2","number","button","type","onClick","deleteList","Component","mapDispatchToProps","dispatch","delete","then","catch","error","get","r","data","connect","Phonebook","text","phonebookValue","setState","target","value","numberValue","btnClick","preventDefault","form","onSubmit","label","input","placeholder","onChange","max","changeFilter","container","Alert","massage","h1","App","text2","message","message2","onAddList","setTimeout","prevProps","prevState","notif","in","appear","unmountOnExit","length","item","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","contact","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","deleteListReduser","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,OAAS,0BAA0B,MAAQ,yBAAyB,MAAQ,2B,mBCA7HD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,aAAe,0BAA0B,MAAQ,qB,mBCAvHD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,UAAY,4B,mBCA5DD,EAAOC,QAAU,CAAC,IAAM,mBAAmB,GAAK,oB,4OCCnCC,EAAaC,YAAa,cAC1BC,EAAeD,YAAa,gBAC5BE,EAAaF,YAAa,cAE1BG,EAAWH,YAAa,YACxBI,EAAaJ,YAAa,cAC1BK,EAAWL,YAAa,YAExBM,EAAcN,YAAa,eAC3BO,EAAgBP,YAAa,iBAC7BQ,EAAcR,YAAa,eAE3BS,EAAaT,YAAa,cCDvCU,IAAMC,SAASC,QAAU,wBAEzB,I,QCbMC,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAE3CC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAmBC,YACvB,CAACP,EAAkBI,IACnB,SAACD,EAAOE,GACN,IAAMG,EAAoBH,EAAOI,cACjC,OAAON,EAAME,QAAO,qBAAGK,KAChBD,cAAcE,SAASH,S,OCF5BI,E,uKACJ,WACEC,KAAKC,MAAMC,c,oBAGb,WAAU,IAAD,OACP,OACE,qBAAKC,UAAWC,IAAEC,IAAlB,SACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKJ,UAAWC,IAAEI,GAA7C,SACGR,KAAKC,MAAMZ,SAASoB,KAAI,SAAAC,GAAC,OACxB,cAACC,EAAA,EAAD,CAA0BC,WAAYR,IAAGS,QAAS,IAAlD,SACE,qBAAIV,UAAWC,IAAEU,GAAeC,GAAIL,EAAEK,GAAtC,UACE,iCACE,sBAAMZ,UAAWC,IAAEY,KAAnB,SAA0BN,EAAEb,OAC5B,sBAAMM,UAAWC,IAAEa,MAAnB,SAA2BP,EAAEQ,YAE/B,wBACEf,UAAWC,IAAEe,OACbC,KAAK,SACLC,QAAS,kBAAM,EAAKpB,MAAMqB,WAAWZ,EAAEK,KAHzC,sBALwBL,EAAEK,KADVL,EAAEK,e,GAVXQ,aAoCjBC,EAAqB,CACzBF,WFtBiB,SAAAP,GAAE,OAAI,SAAAU,GACvBA,EAAS7C,KACTI,IACG0C,OADH,oBACuBX,IACpBY,MAAK,kBAAMF,EAAS5C,EAAckC,OAClCa,OAAM,SAAAC,GAAK,OAAIJ,EAAS3C,EAAY+C,SEkBvC3B,UFhBgB,kBAAM,SAAAuB,GACtBA,EAASpD,KACTW,IACG8C,IADH,cAEGH,MAAK,SAAAI,GAAC,OAAIN,EAASlD,EAAawD,EAAEC,UAClCJ,OAAM,SAAAC,GAAK,OAAIJ,EAASjD,EAAWqD,UEczBI,eATS,SAAA7C,GACtB,MAAO,CAAEC,SAAUI,EAAiBL,MAQEoC,EAAzBS,CAA6ClC,G,iBC9CvCmC,E,4MAInB9C,MAAQ,CACN+C,KAAM,GACNjB,OAAQ,I,EAGVkB,eAAiB,SAAA1B,GAAC,OAAI,EAAK2B,SAAS,CAAEF,KAAMzB,EAAE4B,OAAOC,S,EACrDC,YAAc,SAAA9B,GAAC,OAAI,EAAK2B,SAAS,CAAEnB,OAAQR,EAAE4B,OAAOC,S,EAEpDE,SAAW,SAAA/B,GACTA,EAAEgC,iBACF,EAAKzC,MAAMmC,eAAe,EAAKhD,MAAM+C,KAAM,EAAK/C,MAAM8B,QACtD,EAAKmB,SAAS,CAAEF,KAAM,GAAIjB,OAAQ,M,4CAEpC,WACE,MAAyBlB,KAAKZ,MAAtB+C,EAAR,EAAQA,KAAMjB,EAAd,EAAcA,OACd,OACE,uBAAMf,UAAWC,IAAEuC,KAAMC,SAAU5C,KAAKyC,SAAxC,UACE,wBAAOtC,UAAWC,IAAEyC,MAApB,iBAEE,uBACE1C,UAAWC,IAAE0C,MACb1B,KAAK,OACLmB,MAAOJ,EACPY,YAAY,aACZC,SAAUhD,KAAKoC,oBAInB,wBAAOjC,UAAWC,IAAEyC,MAApB,mBAEE,uBACE1C,UAAWC,IAAE0C,MACb1B,KAAK,SACL6B,IAAI,aACJV,MAAOrB,EACP6B,YAAY,qBACZC,SAAUhD,KAAKwC,iBAGnB,uBACA,wBAAQpB,KAAK,SAASjB,UAAWC,IAAEe,OAAnC,gC,GA5C+BI,a,iBC2BjCC,EAAqB,CACzB0B,aAAcnE,GAGDkD,eARS,SAAA7C,GAAK,MAAK,CAChCI,OAAQD,EAAUH,MAOoBoC,EAAzBS,EA7BA,SAAC,GAA8B,IAA5BzC,EAA2B,EAA3BA,OAAQ0D,EAAmB,EAAnBA,aACxB,OACE,qBAAK/C,UAAWC,IAAE+C,UAAlB,SACE,2DACwB,uBACtB,uBACEZ,MAAO/C,EACPW,UAAWC,IAAE0C,MACb1B,KAAK,OACL2B,YAAY,eACZC,SAAU,SAAAtC,GAAC,OAAIwC,EAAaxC,EAAE4B,OAAOC,kB,iBCbhC,SAASa,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QAC9B,OACE,qBAAKlD,UAAWC,IAAEC,IAAlB,SACE,oBAAIF,UAAWC,IAAEkD,GAAjB,SAAsBD,M,MCMtBE,E,4MACJnE,MAAQ,CACN+C,KAAM,GACNqB,MAAO,GACPC,SAAS,EACTC,UAAU,G,EAoBZtB,eAAiB,SAACD,EAAMjB,GAEX,KAATiB,GACW,KAAXjB,IAGoC,IAFpC,EAAKjB,MAAMZ,SACRoB,KAAI,SAAAC,GAAC,OAAIA,EAAEb,KAAKD,iBAChBE,SAASqC,EAAKvC,eAEjB,EAAKK,MAAM0D,UAAUxB,EAAMjB,IAE3B,EAAKmB,SAAS,CAAEqB,UAAU,EAAMF,MAAO,2BACvCI,YAAW,WACT,EAAKvB,SAAS,CAAEqB,UAAU,EAAOF,MAAO,OACvC,MAGH,EAAKvD,MAAMZ,SACRoB,KAAI,SAAAC,GAAC,OAAIA,EAAEb,KAAKD,iBAChBE,SAASqC,EAAKvC,gBAEjB,EAAKyC,SAAS,CAAEF,U,wDArCpB,SAAmB0B,EAAWC,GAAY,IAAD,OACvC,EAA0B9D,KAAKZ,MAAvB+C,EAAR,EAAQA,KACR,IADA,EAAcsB,SAGZzD,KAAKC,MAAMZ,SACRoB,KAAI,SAAAC,GAAC,OAAIA,EAAEb,KAAKD,iBAChBE,SAASqC,EAAKvC,gBACR,KAATuC,EAMA,OAJAnC,KAAKqC,SAAS,CAAEoB,SAAS,EAAMD,MAAO,iCACtCI,YAAW,WACT,EAAKvB,SAAS,CAAEoB,SAAS,EAAOtB,KAAM,GAAIqB,MAAO,OAChD,O,oBA8BP,WACE,OACE,sBAAKrD,UAAWC,IAAEmD,IAAlB,UACE,sBAAKpD,UAAWC,IAAE2D,MAAlB,UACE,cAACpD,EAAA,EAAD,CACEqD,IAAI,EACJC,QAAQ,EACRrD,WAAYR,IACZS,QAAS,IACTqD,eAAa,EALf,SAOE,6CAEF,qBAAK/D,UAAU,QAAf,SACE,cAACQ,EAAA,EAAD,CACEqD,GAAIhE,KAAKZ,MAAMqE,SAAWzD,KAAKZ,MAAMsE,SACrC9C,WAAW,QACXC,QAAS,IACTqD,eAAa,EAJf,SAME,cAACd,EAAD,CAAOC,QAASrD,KAAKZ,MAAMoE,eAIjC,cAAC,EAAD,CAAWpB,eAAgBpC,KAAKoC,iBAChC,cAACzB,EAAA,EAAD,CACEqD,GAAIhE,KAAKC,MAAMZ,SAAS8E,OAAS,EACjCvD,WAAW,SACXC,QAAS,IACTqD,eAAa,EAJf,SAME,cAAC,EAAD,MAEF,cAAC,EAAD,W,GAnFU3C,aA6FZC,EAAqB,CACzBmC,UN3Fc,SAACxB,EAAMjB,GAAP,OAAkB,SAAAO,GAChC,IAAM2C,EAAO,CAAEvE,KAAMsC,EAAMjB,OAAQA,GACnCO,EAAShD,KACTO,IACGqF,KAAK,YAAaD,GAClBzC,MAAK,SAAAI,GAAC,OAAIN,EAAS/C,EAAWqD,EAAEC,UAChCJ,OAAM,SAAAC,GAAK,OAAIJ,EAAS9C,EAASkD,UMwFvBI,eARS,SAAA7C,GACtB,MAAO,CAAEC,SAAUF,EAAiBC,MAOEoC,EAAzBS,CAA6CsB,GCjG7Ce,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,yBCERjF,GAAQwF,YAAc,IAAD,oBACxBvG,GAAe,SAACwG,EAAD,YAAMC,WADG,eAExBtG,GAAa,SAACU,EAAD,OAAU4F,EAAV,EAAUA,QAAV,4BAA4B5F,GAA5B,CAAmC4F,OAFxB,eAGxBnG,GAAgB,SAACO,EAAD,OAAU4F,EAAV,EAAUA,QAAV,OACf5F,EAAMI,QAAO,SAAAyF,GAAO,OAAIA,EAAQlE,KAAOiE,QAJhB,IAOrBxF,GAASsF,YAAc,GAAD,gBACzB/F,GAAa,SAACgG,EAAD,YAAMC,YAGPE,gBAAgB,CAC7B5F,SACAE,Y,SCXI2F,GAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UASjDC,GAJDC,YAAe,CAC3BC,QAAS,CAAE1G,SAAU2G,IACrBb,gBCbFc,IAASC,OAEP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,EAAD,MAGFM,SAASC,eAAe,SAG1B9B,K,kBChBAnG,EAAOC,QAAU,CAAC,GAAK,qBAAqB,GAAK,qBAAqB,IAAM,sBAAsB,OAAS,yBAAyB,MAAQ,wBAAwB,YAAc,8BAA8B,KAAO,uBAAuB,WAAa,6BAA6B,MAAQ,wBAAwB,KAAO,0B","file":"static/js/main.c64cb7f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__R_DfE\",\"button\":\"Phonebook_button__1LZY7\",\"label\":\"Phonebook_label__tJy8B\",\"input\":\"Phonebook_input__3jnc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3wguf\",\"appear\":\"App_appear__33cE-\",\"appearActive\":\"App_appearActive__C5_uC\",\"notif\":\"App_notif__1YOBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2tt4B\",\"container\":\"Filter_container__2UqPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Alert_div__3LpEm\",\"h1\":\"Alert_h1__Qf5_D\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchStart = createAction('fetchStart');\nexport const fetchSuccess = createAction('fetchSuccess');\nexport const fetchError = createAction('fetchError');\n\nexport const addStart = createAction('addStart');\nexport const addSuccess = createAction('addSuccess');\nexport const addError = createAction('addError');\n\nexport const deleteStart = createAction('deleteStart');\nexport const deleteSuccess = createAction('deleteSuccess');\nexport const deleteError = createAction('deleteError');\n\nexport const filterList = createAction('filterList');\n","import axios from 'axios';\nimport {\n  addStart,\n  addSuccess,\n  addError,\n  deleteStart,\n  deleteSuccess,\n  deleteError,\n  fetchStart,\n  fetchSuccess,\n  fetchError,\n} from './listAction';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst addList = (text, number) => dispatch => {\n  const item = { name: text, number: number };\n  dispatch(addStart());\n  axios\n    .post('/contacts', item)\n    .then(r => dispatch(addSuccess(r.data)))\n    .catch(error => dispatch(addError(error)));\n};\n\nconst deleteList = id => dispatch => {\n  dispatch(deleteStart());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteSuccess(id)))\n    .catch(error => dispatch(deleteError(error)));\n};\nconst fetchList = () => dispatch => {\n  dispatch(fetchStart());\n  axios\n    .get(`/contacts/`)\n    .then(r => dispatch(fetchSuccess(r.data)))\n    .catch(error => dispatch(fetchError(error)));\n};\n\nexport { addList, deleteList, fetchList };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContactsItems = state => state.contacts.items;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getFilterContact = createSelector(\n  [getContactsItems, getFilter],\n  (items, filter) => {\n    const filterToLowerCase = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filterToLowerCase),\n    );\n  },\n);\n\nexport { getContactsItems, getFilterContact, getFilter };\n","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { deleteList } from '../../redux/listOperations';\nimport { fetchList } from '../../redux/listOperations';\nimport React, { Component } from 'react';\nimport { getFilterContact } from '../../redux/contacts-selectors';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.fetchList();\n  }\n\n  render() {\n    return (\n      <div className={s.div}>\n        <TransitionGroup component=\"ul\" className={s.ul}>\n          {this.props.contacts.map(e => (\n            <CSSTransition key={e.id} classNames={s} timeout={250}>\n              <li className={s.li} key={e.id} id={e.id}>\n                <span>\n                  <span className={s.span}>{e.name}</span>\n                  <span className={s.span2}>{e.number}</span>\n                </span>\n                <button\n                  className={s.button}\n                  type=\"submit\"\n                  onClick={() => this.props.deleteList(e.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { contacts: getFilterContact(state) };\n};\n\nconst mapDispatchToProps = {\n  deleteList: deleteList,\n  fetchList: fetchList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n\nContacts.propTypes = {\n  contacts: PropTypes.array,\n  deleteList: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Phonebook.module.css';\n\nexport default class Phonebook extends Component {\n  static propTypes = {\n    phonebookValue: PropTypes.func,\n  };\n  state = {\n    text: '',\n    number: '',\n  };\n\n  phonebookValue = e => this.setState({ text: e.target.value });\n  numberValue = e => this.setState({ number: e.target.value });\n\n  btnClick = e => {\n    e.preventDefault();\n    this.props.phonebookValue(this.state.text, this.state.number);\n    this.setState({ text: '', number: '' });\n  };\n  render() {\n    const { text, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.btnClick}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            value={text}\n            placeholder=\"Enter name\"\n            onChange={this.phonebookValue}\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"number\"\n            max=\"9999999999\"\n            value={number}\n            placeholder=\"Enter phone number\"\n            onChange={this.numberValue}\n          />\n        </label>\n        <br />\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { filterList } from '../../redux/listAction';\nimport { getFilter } from '../../redux/contacts-selectors';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <div className={s.container}>\n      <label>\n        Find contacts by name <br />\n        <input\n          value={filter}\n          className={s.input}\n          type=\"text\"\n          placeholder=\"Enter filter\"\n          onChange={e => changeFilter(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  filter: getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  changeFilter: filterList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport s from './Alert.module.css';\n\nexport default function Alert({ massage }) {\n  return (\n    <div className={s.div}>\n      <h3 className={s.h1}>{massage}</h3>\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport s from './App.module.css';\nimport './App2.css';\nimport Contacts from './component/Contacts/Contacts';\nimport Phonebook from './component/Phonebook/Phonebook';\nimport Filter from './component/Filter/Filter';\nimport { CSSTransition } from 'react-transition-group';\nimport Alert from './component/Alert/Alert';\nimport { connect } from 'react-redux';\nimport { addList } from './redux/listOperations';\nimport { getContactsItems } from './redux/contacts-selectors';\n\nclass App extends Component {\n  state = {\n    text: '',\n    text2: '',\n    message: false,\n    message2: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { text, message } = this.state;\n    if (\n      !message &&\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase()) &&\n      text !== ''\n    ) {\n      this.setState({ message: true, text2: 'Contact already exists!' });\n      setTimeout(() => {\n        this.setState({ message: false, text: '', text2: '' });\n      }, 3000);\n      return;\n    }\n  }\n\n  phonebookValue = (text, number) => {\n    if (\n      text !== '' &&\n      number !== '' &&\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase()) === false\n    ) {\n      this.props.onAddList(text, number);\n    } else {\n      this.setState({ message2: true, text2: 'Fill in all the fields' });\n      setTimeout(() => {\n        this.setState({ message2: false, text2: '' });\n      }, 3000);\n    }\n    if (\n      this.props.contacts\n        .map(e => e.name.toLowerCase())\n        .includes(text.toLowerCase())\n    ) {\n      this.setState({ text });\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className={s.App}>\n        <div className={s.notif}>\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames={s}\n            timeout={500}\n            unmountOnExit\n          >\n            <h1>Phonebook</h1>\n          </CSSTransition>\n          <div className=\"alert\">\n            <CSSTransition\n              in={this.state.message || this.state.message2}\n              classNames=\"alert\"\n              timeout={250}\n              unmountOnExit\n            >\n              <Alert massage={this.state.text2} />\n            </CSSTransition>\n          </div>\n        </div>\n        <Phonebook phonebookValue={this.phonebookValue} />\n        <CSSTransition\n          in={this.props.contacts.length > 1}\n          classNames=\"filter\"\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <Contacts />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { contacts: getContactsItems(state) };\n};\n\nconst mapDispatchToProps = {\n  onAddList: addList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  deleteSuccess,\n  filterList,\n  addSuccess,\n  fetchSuccess,\n} from './listAction';\n\nconst items = createReducer([], {\n  [fetchSuccess]: (_, { payload }) => payload,\n  [addSuccess]: (state, { payload }) => [...state, payload],\n  [deleteSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterList]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import deleteListReduser from './deleteListReduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: { contacts: deleteListReduser },\n  middleware,\n});\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from '../src/redux/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"Contacts_ul__1Uh7N\",\"li\":\"Contacts_li__2a9Dw\",\"div\":\"Contacts_div__1fd90\",\"button\":\"Contacts_button__hTE6j\",\"enter\":\"Contacts_enter__1TUCq\",\"enterActive\":\"Contacts_enterActive__274Qy\",\"exit\":\"Contacts_exit__2VF01\",\"exitActive\":\"Contacts_exitActive__2QGAm\",\"span2\":\"Contacts_span2__-rgGP\",\"span\":\"Contacts_span__3yJ0K\"};"],"sourceRoot":""}